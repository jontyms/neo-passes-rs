name: Python Release

permissions:
  contents: read

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  macos:
    runs-on: macos-latest
    permissions:
      contents: read
      actions: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable

      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist -m Cargo.toml -i 3.12
      - name: Install built wheel - universal2
        run: |
          pip install passes_rs_py --no-index --find-links dist --force-reinstall
          python -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: dist

  windows:
    runs-on: windows-latest
    permissions:
      contents: read
      actions: write

    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m Cargo.toml
      - name: Install built wheel
        run: |
          pip install passes_rs_py --no-index --find-links dist --force-reinstall
          python -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          before-script-linux: |
            apt install libipc-run-perl -y|| echo "not apt"
          args: --release --out dist -m Cargo.toml -i 3.12
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install passes_rs_py --no-index --find-links dist --force-reinstall
          python -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      packages: write

    strategy:
      matrix:
        target: [aarch64, s390x, ppc64le, ppc64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          before-script-linux: |
            apt install libipc-run-perl -y|| echo "not apt"
          args: --release --out dist -m Cargo.toml -i 3.12
      - uses: uraimo/run-on-arch-action@v3.0.1
        if: matrix.target != 'ppc64'
        name: Install built wheel
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          dockerRunArgs: -v ${{ github.workspace }}/dist:/dist
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install passes_rs_py --no-index --find-links /dist/ --force-reinstall
            python3 -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-cross-${{ matrix.target }}
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          before-script-linux: |
            apt install libipc-run-perl -y|| echo "not apt"
          args: --release --out dist -m Cargo.toml -i 3.12
      - name: Install built wheel
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            apk add python3 py3-pip
            python3 -m venv /tmp/venv
            . /tmp/venv/bin/activate
            pip install -U pip
            pip install passes_rs_py --no-index --find-links /io/dist/ --force-reinstall
            python -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.target }}
          path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      packages: write

    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          #- target: armv7-unknown-linux-musleabihf
          #  arch: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          before-script-linux: |
            apt install libipc-run-perl -y|| echo "not apt"
          args: --release --out dist -m Cargo.toml -i 3.12
      - uses: uraimo/run-on-arch-action@v3.0.1
        name: Install built wheel
        with:
          arch: ${{ matrix.platform.arch }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          dockerRunArgs: -v ${{ github.workspace }}/dist:/dist
          install: |
            apk add python3 py3-pip
            python3 -m venv /opt/venv
          run: |
            . /opt/venv/bin/activate
            pip install -U pip
            pip install passes_rs_py --no-index --find-links /dist/ --force-reinstall
            python -c "import passes_rs_py"
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-cross-${{ matrix.platform.target }}
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: py-release
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [macos, windows, linux, linux-cross, musllinux, musllinux-cross]
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
